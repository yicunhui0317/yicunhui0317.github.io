<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo+Github搭建博客</title>
      <link href="/2023/01/14/Hexo-Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/01/14/Hexo-Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo-Github搭建博客"><a href="#Hexo-Github搭建博客" class="headerlink" title="Hexo+Github搭建博客"></a>Hexo+Github搭建博客</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>文章介绍如何快速搭建一个属于自己的博客，只需要按照顺序一步步完成即可，每个步骤都有详细的操作，也包括了可能遇到的问题及解决方法（应该可以解决90%以上的问题）如果还有问题就上网查询问题解决方法啦！</p><h3 id="1-基本环境搭建"><a href="#1-基本环境搭建" class="headerlink" title="1.基本环境搭建"></a>1.基本环境搭建</h3><p>搭建博客之前我们先要安装需要的环境<br>首先、需要安装 Node.js(<a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a>) 和 Git(<a href="https://git-scm.com/downloads)%EF%BC%8C%E5%A4%A7%E5%AE%B6%E5%B0%BD%E9%87%8F%E5%8E%BB%E4%B8%8B%E8%BD%BD.exe%E6%89%A9%E5%B1%95%E5%90%8D%E7%9A%84%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%EF%BC%8C%E8%BF%99%E6%A0%B7%E7%9A%84%E5%A5%BD%E5%A4%84%E6%98%AF%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E3%80%81%E7%9C%81%E5%8E%BB%E4%BA%86%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE%E3%80%82%E5%AE%89%E8%A3%85%E7%89%88%E6%9C%AC%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E7%9A%84%E7%89%88%E6%9C%AC%E3%80%82%E5%A6%82%E6%9E%9C%E6%9C%89%E9%97%AE%E9%A2%98%E5%8D%B8%E8%BD%BD%E5%AE%89%E8%A3%85%E6%97%A7%E7%89%88%E3%80%82">https://git-scm.com/downloads)，大家尽量去下载.exe扩展名的可执行文件，这样的好处是一键安装、省去了一些配置。安装版本也可以安装最新的版本。如果有问题卸载安装旧版。</a> </p><h4 id="node-js安装"><a href="#node-js安装" class="headerlink" title="node.js安装"></a>node.js安装</h4><p><img src="https://github.com/yicunhui0317/picture/raw/main/575ce1ebf45e5c69e4ba44c370c2df21dae65c2b.png%40942w_546h_progressive.webp" alt="img"></p><p>安装后打开win+R打开cmd</p><p>验证Node.js的方法<br>node -v<br>npm -v </p><p>安装成功会显示版本号</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/image-20230114174127779.png" alt="image-20230114174127779"></p><h4 id="关键点1：可以使用nvm进行版本控制"><a href="#关键点1：可以使用nvm进行版本控制" class="headerlink" title="关键点1：可以使用nvm进行版本控制"></a>关键点1：可以使用nvm进行版本控制</h4><p>考虑到可能很多项目对于node的版本要求不一样，为避免今后发生的麻烦，建议使用nvm进行node的版本控制。</p><p>安装前须知：</p><ul><li>之前有node环境的需卸载干净</li><li>如果安装完node后，输入 <code>nvm use &lt;版本号&gt;</code>，仍无效（node版本前面都没有选中的<code>&quot;*&quot;</code>），需重新安装</li><li>安装路径上不要有中文字符或者空格，否则会出现错误</li></ul><h5 id="nvm下载"><a href="#nvm下载" class="headerlink" title="nvm下载"></a>nvm下载</h5><p>安装包下载地址： <a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a></p><p><img src="https://github.com/yicunhui0317/picture/raw/main/306d291a524c4c5483bc0a2ea2fa52ff.png" alt="img"></p><h5 id="nvm安装"><a href="#nvm安装" class="headerlink" title="nvm安装"></a><strong>nvm安装</strong></h5><p>新建两个文件夹，一个用来存放nvm的安装文件，另一个用来存放node的文件（最好不要在c盘）.</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/image-20230114174617498.png" alt="image-20230114174617498"></p><p>将下载好的安装包放入nvm文件夹中，解压，双击进行安装</p><p>（路径选择分别对应好自己新建的文件夹）</p><p>安装成功后输入nvm会有如下显示</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/nvm%E5%AE%89%E8%A3%85%E6%88%AA%E5%9B%BE.png" alt="image-20230114174925228"></p><h5 id="node-的不同版本安装及切换"><a href="#node-的不同版本安装及切换" class="headerlink" title="node 的不同版本安装及切换"></a>node 的不同版本安装及切换</h5><p>NVM 安装成功后，win + r 输入cmd 新开cmd窗口，可以通过 <code>nvm -v</code> 命令查看所有可用的命令</p><p>使用 <code>nvm install &lt;版本号&gt;</code>命令安装指定版本的NodeJS</p><p>安装成功后在 NVM 安装目录下出现一个带版本的文件夹，这时可以尝试在上面使用 <code>nvm list</code> 命令查看已安装 NodeJS 列表</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/node%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png" alt="image-20230114175521058"></p><p>使用<code>nvm use &lt;版本号&gt;</code> 切换需要使用的 NodeJS 版本，切换成功后可以使用 <code>node -v</code> 和 <code>npm -v</code> 命令查看是否切换成功（带*的是正在使用的）</p><p>常用命令：</p><p>nvm off                     &#x2F;&#x2F; 禁用node.js版本管理(不卸载任何东西)<br>nvm on                      &#x2F;&#x2F; 启用node.js版本管理<br>nvm install <version>       &#x2F;&#x2F; 安装node.js的命名 version是版本号 例如：nvm install 8.12.0<br>nvm uninstall <version>     &#x2F;&#x2F; 卸载node.js是的命令，卸载指定版本的nodejs，当安装失败时卸载使用<br>nvm ls                      &#x2F;&#x2F; 显示所有安装的node.js版本<br>nvm list available          &#x2F;&#x2F; 显示可以安装的所有node.js的版本<br>nvm use <version>           &#x2F;&#x2F; 切换到使用指定的nodejs版本<br>nvm v                       &#x2F;&#x2F; 显示nvm版本<br>nvm install stable          &#x2F;&#x2F; 安装最新稳定版</p><h4 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h4><p><img src="https://github.com/yicunhui0317/picture/raw/main/949fb1912af01eeaeb18cb429cc0f16adb48b130.png%40942w_690h_progressive.webp" alt="img"></p><p>下载速度过慢可使用淘宝镜像（其他的也可以）</p><p>验证安装是否成功</p><p>git –version（成功显示版本）</p><h3 id="2-博客搭建"><a href="#2-博客搭建" class="headerlink" title="2.博客搭建"></a>2.博客搭建</h3><p>准备好自己的GitHub账号，目前国内已经屏蔽了该网站，可能需要梯子</p><p>可参考<a href="https://www.bilibili.com/read/cv5107169">https://www.bilibili.com/read/cv5107169</a></p><h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><p>登录之后创建一个和你用户名相同的仓库，后面加.github.io，<br>只有这样，将来要部署到GitHub的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名.</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.png" alt="image-20230114202109350"></p><h4 id="设置ssh免密登录"><a href="#设置ssh免密登录" class="headerlink" title="设置ssh免密登录"></a>设置ssh免密登录</h4><p>打开cmd窗口：执行如下命令：</p><p>git config –global user.name “yourname” </p><p>git config –global user.email “youremail”</p><p>yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱，这样GitHub才能知道你是不是对应它的账户。用户名为仓库的名称，邮箱为注册github的邮箱。</p><p>可用以下两条命令验证是否成功</p><p>git config user.name </p><p>git config user.email</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/ssh%E9%AA%8C%E8%AF%81%E6%88%90%E5%8A%9F.png" alt="image-20230114202645632"></p><p>接着进入到家目录：C:\用户\s，右击打开git bash并输入</p><p>（其实在任意位置使用git bash好像都可以生成，但是生成位置是相同的）</p><p>ssh-keygen -t rsa -C <a href="mailto:&#x58;&#88;&#x58;&#88;&#88;&#x58;&#64;&#113;&#113;&#x2e;&#99;&#x6f;&#109;">&#x58;&#88;&#x58;&#88;&#88;&#x58;&#64;&#113;&#113;&#x2e;&#99;&#x6f;&#109;</a>（GitHub注册的qq邮箱）</p><p>敲三次回车会有如下：</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90.png" alt="在这里插入图片描述"></p><p>这时会多出一个.ssh的文件夹，点开它</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/%E5%85%AC%E9%92%A5%E7%A7%81%E9%92%A5.png" alt="image-20230114203215394"></p><p>下面带pub的是公钥，也是我们需要的</p><p>在GitHub中找到settings如图</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/settings.png" alt="image-20230114203643836"></p><p>找到SSH and GPG keys，选择添加密钥</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/%E6%B7%BB%E5%8A%A0%E5%AF%86%E9%92%A5.png" alt="image-20230114203839626"></p><p>将刚刚生成的公钥内容复制进去放进去，title随便起，最后选择add就完成了</p><p>使用命令查看是否绑定成功</p><p>ssh -T <a href="mailto:&#103;&#105;&#116;&#64;&#103;&#x69;&#x74;&#104;&#117;&#x62;&#x2e;&#x63;&#111;&#109;">&#103;&#105;&#116;&#64;&#103;&#x69;&#x74;&#104;&#117;&#x62;&#x2e;&#x63;&#111;&#109;</a></p><p><img src="https://github.com/yicunhui0317/picture/raw/main/%E7%BB%91%E5%AE%9A%E6%88%90%E5%8A%9F.png" alt="image-20230114204457734"></p><p>只要出现successfully authenticated就表示成功了！</p><h4 id="本地生成博客内容"><a href="#本地生成博客内容" class="headerlink" title="本地生成博客内容"></a>本地生成博客内容</h4><p>新建一个文件夹，位置任意，点进去，右键git bash进入命令行</p><p>使用命令：npm install -g hexo-cli  安装hexo（一般不会有问题的）</p><p>接着输入：hexo init 进行初始化</p><p>出现如下图表示初始化成功</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/hexo%E5%88%9D%E5%A7%8B%E5%8C%96%E6%88%90%E5%8A%9F.png" alt="在这里插入图片描述"></p><h4 id="关键点2：各种报错及解决"><a href="#关键点2：各种报错及解决" class="headerlink" title="关键点2：各种报错及解决"></a>关键点2：各种报错及解决</h4><p>网上各种方法都不太靠谱，因为是很久之前的方法了，GitHub不仅经过了几次更新，目前更是被国内屏蔽了。</p><p>若出现connection was reset的问题，比较好解决，由于github是国外的网站，可能连接不太稳定，反复输入命令就可以，但是目前应该不会出现这个情况。</p><p>若出现time out 的问题，也是最常出现的问题，是因为无法正常连接GitHub，有两种解决方法，第一种是git代理设置，这个网上的方法很多，可以自行查找，在这里介绍第二个简单实用的方法：修改hosts文件</p><p>文件位置如下如所示</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/%E6%96%87%E4%BB%B6%E4%BD%8D%E7%BD%AE.png" alt="image-20230114205823831"></p><p>右键选择打开方式（个人使用的notepad++）</p><p>在末尾添加：</p><p>140.82.114.3   github.com</p><p>注意：由于github会动态修改IP地址，如果有时候打不开需要到官网查询IP</p><p><a href="https://www.ipaddress.com/site/www.github.com">https://www.ipaddress.com/site/www.github.com</a></p><p>接下来生成本地静态页面</p><p>hexo s</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/hexo%E6%9C%AC%E5%9C%B0%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2.png" alt="image-20230114224320974"></p><p>新建完成后，指定文件夹目录下有：<br>node_modules: 依赖包<br>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题<br>_config.yml: 博客的配置文件</p><p>这时候我们通过<a href="http://localhost:4000/%E5%B0%B1%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%E5%8D%9A%E5%AE%A2%E4%BA%86">http://localhost:4000/就可以访问博客了</a></p><p><img src="https://github.com/yicunhui0317/picture/raw/main/4000%E8%AE%BF%E9%97%AE%E5%8D%9A%E5%AE%A2.png" alt="在这里插入图片描述"></p><h3 id="3-博客部署"><a href="#3-博客部署" class="headerlink" title="3.博客部署"></a>3.博客部署</h3><p>这一步，我们将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，随时可以访问</p><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>在自己新建的仓库中找到ssh，复制</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/%E9%85%8D%E7%BD%AEdeploy.png" alt="image-20230114225751143"></p><p>在自己新建的文件夹内找到——config.yml</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/yml.png" alt="image-20230114225925958"></p><p>打开文件并新增如下信息：</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/yml%E9%85%8D%E7%BD%AE%E6%96%B0%E5%A2%9E.png" alt="image-20230114225959749"></p><p>其中repository为刚刚复制的内容（个人使用的https还需要令牌，比较麻烦）<strong>注意：冒号后面有一个空格！！</strong></p><h4 id="部署命令"><a href="#部署命令" class="headerlink" title="部署命令"></a>部署命令</h4><p>在博客文件夹下打开git bash</p><p>先安装deploy-git：</p><p>npm install hexo-deployer-git –save</p><p>然后依次执行以下命令：</p><p>hexo c    #清除缓存文件 db.json 和已生成的静态文件 public<br>hexo g    #生成网站静态文件到默认设置的 public 文件夹<br>hexo d    #自动生成网站静态文件，并部署到设定的仓库<br>注意：deploy的时候会让输入yes，第一次登录的时候会需要输入密码</p><p>最后回到github上查看仓库</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/%E4%BB%93%E5%BA%93%E4%B8%8A%E4%BC%A0%E6%88%90%E5%8A%9F.png" alt="image-20230114230447149"></p><p>这样博客就部署成功啦！</p><p>现在也可也用自己的用户名访问</p><p><img src="https://github.com/yicunhui0317/picture/raw/main/%E7%94%A8%E6%88%B7%E5%90%8D%E8%AE%BF%E9%97%AE%E5%8D%9A%E5%AE%A2.png" alt="image-20230114230653208"></p><p>下一期关于样式优化~</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
